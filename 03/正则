匹配字符串  就是来操作字符串的
模式：贪婪匹配
使用场景：
    数据校验
    采集


定界符    / / 两个杠
 
i  忽略大小写

/\.(jpg|png|gif)/i     匹配图片

str.serach(reg)  匹配的下标拿出来

str.match(reg)  匹配的东西拿出来  返回一个数组

reg.test(str)   test是正则的一个方法 返回布尔值　缺点：整个字符串 只要一部分符合要求就可以过

修饰符  可以解决test这个bug  ^ 行首  $ 行尾  

g  全局匹配 global

+ 量词  不然只能匹配一个 比如 23423423   要匹配数字  如果不加+ 只能匹配一个数字 2  加了可以匹配到后面所有数字 23423423

replace 替换

/d  匹配数字 


元字符  []
1.任何一个  第一个是a   最后一个是q  中间可以abc    可以匹配aaq  abq  acq  不能aabq 一个元字符只能替换一个字符
    /a[abc]q/
2.范围  
    /[a-z]/i
    /[0-9]/
    /[a-z0-9]/              没有分隔符这个概念
3.排除符号 [ˆ]  必须写在[]里面  不然ˆ就是修饰符
[^+]       不想要+号
[^a-z0-9]  不想a-z 0-9


转义
\d  等价于 [0-9]
\w  [a-z0-9_]       
\s  空白            删除所有空白字符 
.   任意字符         如果想用普通的点 需要这么写 \.

\D 排除0-9 相当于 [ˆ0-9]
\W [ˆa-z0-9_]
\S 非空白


 

量词--数量   
    {n}  代表几位
        不加任何量词就是一个
        /a{6}/      6个a
        /\d{11}/    11位数字  

    {n,m}   代表范围
        /\d{5,12}/  5到12的范围     /1\d{4,11}/ 1开头  后面4到11的范围

    {n,}    
        至少n位  不能少只能多   /\w{6,}/  a-z0-9_  至少6位 几位不限

    +  至少1位 上不封顶
        等价于{1,}    

    ?    可以没有  有的话 最多一个
        等价于{0,1}        

    /\.jsx?$/  前面是.  后面自动匹配js或者jsx  可以有x 自动匹配js或jsx文件 
        

实际应用：

/a.{5,18}z/     a开头  中间任何字符5-18位  z 结尾

/ˆ[1-9]\d{4,11}$/   
    qq号纯数字  最少5位  最多12号  第一位不能是0 第一位可以1-9
     ˆ表示从开头开始就要符合这个要求   
     $表示从结尾就要符合这个要求   


/ˆhttps?:\/\//  
    匹配网址
     s 可有可无  但是最多出现一个

/\.(jpg|gif|png)$/i   ｜ 或 优先级很低    一半使用或 都需要用()提升优先级
    是否是图片  $表示 结尾必须是jpg gig png

0-9999     
    1位 0-9
    2位 10-99
    3位 100-999
    4位 1000-9999
实现：   /\d|[1-9]\d|[1-9]\d\d|[1-9]\d\d\d/
简写成： /ˆ(\d[1-9]\d{1,3})$/ 或 /ˆ(\d[1-9]\d+)$/